package APrioriMiner;

import static org.junit.Assert.*;

import java.util.HashSet;

import org.junit.Test;

public class APrioriTests {
	
	double confidenceLevel = 0.5;
	String filepath = "src/test.txt";
	
	
	@Test
	public void testAssociationRule() {
//		testing constructor
		Item item = new Item("beer");
		Item item2 = new Item("dipper");
		ItemSet set = new ItemSet(item);
		ItemSet consequentIn = new ItemSet(item2);
		AssociationRule ar = new AssociationRule(set, consequentIn, confidenceLevel);
		assertNotNull(ar);

//		testing constructor for duplicate item
		consequentIn.add(item);
		ar = new AssociationRule(set, consequentIn, confidenceLevel);
		assertFalse(ar.consequent.contains(item));
		
		
		
//		testing getters and setters
		ar.setSupportLevel(0.44);
		ar.setConsequent(set);
		assertNotNull(ar);
		assertNotNull(ar.supportLevel);
		assertNotNull(ar.consequent);
		assertNotNull(ar.antecedent);
		assertNotNull(ar.getAntecedent());
		assertNotNull(ar.getConfidenceLevel());
		assertNotNull(ar.getConsequent());
		assertNotNull(ar.getSupportLevel());
	}
	
	
	@Test
	public void testItemSet(){
		
//		testing constructor
		Item item = new Item("beer");
		Item item2 = new Item("dipper");
		ItemSet set = new ItemSet(item);
		
//		testing getters and setters
		assertNotNull(set.items);
		assertEquals(set.getCount(), 1);
		assertNotNull(set.getCount());
		set.increment(5);
		assertEquals(set.getCount(), 6);
		set.setCount(33);
		assertEquals(set.getCount(), 33);
		assertFalse(set.contains(item2));
		set.add(item2);
		assertTrue(set.contains(item2));

		
		
	}
	
	@Test
	public void testItem(){
		
		Item i = new Item("beer");
		Item i2 = new Item("dipper");
		
		
//		testing getters and setters
		assertEquals(i.getName(), "beer");
		i.setName("glasses");
		assertNotEquals(i.getName(), "beer");
		assertEquals(i.getName(), "glasses");
		assertFalse(i.equals(i2));
		assertTrue(i.equals(new Item("glasses")));
	}

	@Test
	public void testGenerateRules(){
		
		APrioriAlgorithm ap = new APrioriAlgorithm(0.4, 0.5, filepath);
		assertNotNull(ap);
		HashSet<AssociationRule> pD = ap.processData();
		System.out.println(pD.toArray());
		System.out.println(pD.toString());
		System.out.println("pd: " + ap.processData());
		
//		ap.generateRules();
		
	}
	
	@Test
	public void testDataAccessObject(){
		fail("Not yet implemented");
	}

}

